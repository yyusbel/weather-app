(()=>{"use strict";const e=async function(e){const t=`https://api.openweathermap.org/data/2.5/weather?q=${e}&units=metric&appid=68b4e603f90e57bc19ce23e6acf69bbd`;try{const n=await fetch(t,{mode:"cors"});if(!n.ok)throw new Error(`City ${e} not found`);return function(e){const{name:t,main:{temp:n,feels_like:i,humidity:d},wind:{speed:c}}=e;return{cityName:t,temperature:n,feelsLike:i,humidity:d,windSpeed:c}}(await n.json())}catch(e){return alert(e),null}},t=function(e){if(!e)return;document.getElementById("searchResult").classList.add("active");const t=document.getElementById("cityName"),n=document.getElementById("temperature"),i=document.getElementById("feelsLike"),d=document.getElementById("humidity"),c=document.getElementById("wind");t.textContent=`${e.cityName}`,n.textContent=`${e.temperature} °C`,i.textContent=`Fells like: ${e.feelsLike} °C`,d.textContent=`Humidity: ${e.humidity} %`,c.textContent=`Wind: ${e.windSpeed} km/h`},n=document.getElementById("searchForm"),i=document.getElementById("searchInput"),d=document.getElementById("searchBtn");n.addEventListener("submit",(e=>{e.preventDefault()})),d.addEventListener("click",(async()=>{if(""===i.value)return;const n=await e(i.value);t(n)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWF0aGVyLWFwcC8uL3NyYy9tb2R1bGVzL3dlYXRoZXIuanMiLCJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvbW9kdWxlcy92aWV3LmpzIiwid2VicGFjazovL3dlYXRoZXItYXBwLy4vc3JjL2luZGV4LmpzIl0sIm5hbWVzIjpbImFzeW5jIiwiY2l0eSIsImVuZHBvaW50IiwicmVzcG9uc2UiLCJmZXRjaCIsIm1vZGUiLCJvayIsIkVycm9yIiwiZGF0YSIsIm5hbWUiLCJjaXR5TmFtZSIsIm1haW4iLCJ0ZW1wIiwidGVtcGVyYXR1cmUiLCJmZWVsc19saWtlIiwiZmVlbHNMaWtlIiwiaHVtaWRpdHkiLCJ3aW5kIiwic3BlZWQiLCJ3aW5kU3BlZWQiLCJjb252ZXJ0RGF0YSIsImpzb24iLCJlcnJvciIsImFsZXJ0Iiwid2VhdGhlckRhdGEiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiY2xhc3NMaXN0IiwiYWRkIiwidGV4dENvbnRlbnQiLCJzZWFyY2hGb3JtIiwic2VhcmNoSW5wdXQiLCJzZWFyY2hCdG4iLCJhZGRFdmVudExpc3RlbmVyIiwiZSIsInByZXZlbnREZWZhdWx0IiwidmFsdWUiXSwibWFwcGluZ3MiOiJtQkFBQSxNQXlCRSxFQWZFQSxlQUF1QkMsR0FDckIsTUFBTUMsRUFBVyxxREFBcURELHdEQUN0RSxJQUNFLE1BQU1FLFFBQWlCQyxNQUFNRixFQUFVLENBQUVHLEtBQU0sU0FDL0MsSUFBS0YsRUFBU0csR0FBSSxNQUFNLElBQUlDLE1BQU0sUUFBUU4sZUFFMUMsT0FmSixTQUFxQk8sR0FDbkIsTUFDRUMsS0FBTUMsRUFDTkMsTUFBUUMsS0FBTUMsRUFBYUMsV0FBWUMsRUFBUyxTQUFFQyxHQUNsREMsTUFBUUMsTUFBT0MsSUFDYlgsRUFDSixNQUFPLENBQUVFLFdBQVVHLGNBQWFFLFlBQVdDLFdBQVVHLFlBQ3ZELENBT2lCQyxPQUFrQmpCLEVBQVNrQixPQUsxQyxDQUhFLE1BQU9DLEdBRVAsT0FEQUMsTUFBTUQsR0FDQyxJQUNULENBQ0YsRUNFRixFQXRCRSxTQUF5QkUsR0FDdkIsSUFBS0EsRUFBYSxPQUVHQyxTQUFTQyxlQUFlLGdCQUNoQ0MsVUFBVUMsSUFBSSxVQUUzQixNQUFNbEIsRUFBV2UsU0FBU0MsZUFBZSxZQUNuQ2IsRUFBY1ksU0FBU0MsZUFBZSxlQUN0Q1gsRUFBWVUsU0FBU0MsZUFBZSxhQUNwQ1YsRUFBV1MsU0FBU0MsZUFBZSxZQUNuQ1QsRUFBT1EsU0FBU0MsZUFBZSxRQUVyQ2hCLEVBQVNtQixZQUFjLEdBQUdMLEVBQVlkLFdBQ3RDRyxFQUFZZ0IsWUFBYyxHQUFHTCxFQUFZWCxpQkFDekNFLEVBQVVjLFlBQWMsZUFBZUwsRUFBWVQsZUFDbkRDLEVBQVNhLFlBQWMsYUFBYUwsRUFBWVIsYUFDaERDLEVBQUtZLFlBQWMsU0FBU0wsRUFBWUwsZ0JBQzFDLEVDZkVXLEVBQWFMLFNBQVNDLGVBQWUsY0FDckNLLEVBQWNOLFNBQVNDLGVBQWUsZUFDdENNLEVBQVlQLFNBQVNDLGVBQWUsYUFFMUNJLEVBQVdHLGlCQUFpQixVQUFXQyxJQUNyQ0EsRUFBRUMsZ0JBQWdCLElBR3BCSCxFQUFVQyxpQkFBaUIsU0FBU2pDLFVBQ2xDLEdBQTBCLEtBQXRCK0IsRUFBWUssTUFBYyxPQUM5QixNQUFNWixRQUFvQixFQUFnQk8sRUFBWUssT0FDdEQsRUFBcUJaLEVBQVksRyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgd2VhdGhlciA9ICgoKSA9PiB7XG4gICAgZnVuY3Rpb24gY29udmVydERhdGEoZGF0YSkge1xuICAgICAgY29uc3Qge1xuICAgICAgICBuYW1lOiBjaXR5TmFtZSxcbiAgICAgICAgbWFpbjogeyB0ZW1wOiB0ZW1wZXJhdHVyZSwgZmVlbHNfbGlrZTogZmVlbHNMaWtlLCBodW1pZGl0eSB9LFxuICAgICAgICB3aW5kOiB7IHNwZWVkOiB3aW5kU3BlZWQgfSxcbiAgICAgIH0gPSBkYXRhO1xuICAgICAgcmV0dXJuIHsgY2l0eU5hbWUsIHRlbXBlcmF0dXJlLCBmZWVsc0xpa2UsIGh1bWlkaXR5LCB3aW5kU3BlZWQgfTtcbiAgICB9XG4gIFxuICAgIGFzeW5jIGZ1bmN0aW9uIGdldERhdGEoY2l0eSkge1xuICAgICAgY29uc3QgZW5kcG9pbnQgPSBgaHR0cHM6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L3dlYXRoZXI/cT0ke2NpdHl9JnVuaXRzPW1ldHJpYyZhcHBpZD02OGI0ZTYwM2Y5MGU1N2JjMTljZTIzZTZhY2Y2OWJiZGA7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGVuZHBvaW50LCB7IG1vZGU6IFwiY29yc1wiIH0pO1xuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB0aHJvdyBuZXcgRXJyb3IoYENpdHkgJHtjaXR5fSBub3QgZm91bmRgKTtcbiAgICAgICAgY29uc3QgZGF0YSA9IGNvbnZlcnREYXRhKGF3YWl0IHJlc3BvbnNlLmpzb24oKSk7XG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgYWxlcnQoZXJyb3IpO1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHsgZ2V0RGF0YSB9O1xuICB9KSgpO1xuICBcbiAgZXhwb3J0IGRlZmF1bHQgd2VhdGhlcjsiLCJjb25zdCB2aWV3ID0gKCgpID0+IHtcbiAgICBmdW5jdGlvbiBzZXRTZWFyY2hSZXN1bHQod2VhdGhlckRhdGEpIHtcbiAgICAgIGlmICghd2VhdGhlckRhdGEpIHJldHVybjtcbiAgXG4gICAgICBjb25zdCBzZWFyY2hSZXN1bHQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInNlYXJjaFJlc3VsdFwiKTtcbiAgICAgIHNlYXJjaFJlc3VsdC5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xuICBcbiAgICAgIGNvbnN0IGNpdHlOYW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjaXR5TmFtZVwiKTtcbiAgICAgIGNvbnN0IHRlbXBlcmF0dXJlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0ZW1wZXJhdHVyZVwiKTtcbiAgICAgIGNvbnN0IGZlZWxzTGlrZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZmVlbHNMaWtlXCIpO1xuICAgICAgY29uc3QgaHVtaWRpdHkgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImh1bWlkaXR5XCIpO1xuICAgICAgY29uc3Qgd2luZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwid2luZFwiKTtcbiAgXG4gICAgICBjaXR5TmFtZS50ZXh0Q29udGVudCA9IGAke3dlYXRoZXJEYXRhLmNpdHlOYW1lfWA7XG4gICAgICB0ZW1wZXJhdHVyZS50ZXh0Q29udGVudCA9IGAke3dlYXRoZXJEYXRhLnRlbXBlcmF0dXJlfSDCsENgO1xuICAgICAgZmVlbHNMaWtlLnRleHRDb250ZW50ID0gYEZlbGxzIGxpa2U6ICR7d2VhdGhlckRhdGEuZmVlbHNMaWtlfSDCsENgO1xuICAgICAgaHVtaWRpdHkudGV4dENvbnRlbnQgPSBgSHVtaWRpdHk6ICR7d2VhdGhlckRhdGEuaHVtaWRpdHl9ICVgO1xuICAgICAgd2luZC50ZXh0Q29udGVudCA9IGBXaW5kOiAke3dlYXRoZXJEYXRhLndpbmRTcGVlZH0ga20vaGA7XG4gICAgfVxuICBcbiAgICByZXR1cm4geyBzZXRTZWFyY2hSZXN1bHQgfTtcbiAgfSkoKTtcbiAgXG4gIGV4cG9ydCBkZWZhdWx0IHZpZXc7IiwiaW1wb3J0IHdlYXRoZXIgZnJvbSBcIi4vbW9kdWxlcy93ZWF0aGVyXCI7XG5pbXBvcnQgdmlldyBmcm9tIFwiLi9tb2R1bGVzL3ZpZXdcIjtcblxuY29uc3Qgc2VhcmNoRm9ybSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VhcmNoRm9ybVwiKTtcbmNvbnN0IHNlYXJjaElucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzZWFyY2hJbnB1dFwiKTtcbmNvbnN0IHNlYXJjaEJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic2VhcmNoQnRuXCIpO1xuXG5zZWFyY2hGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xufSk7XG5cbnNlYXJjaEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgYXN5bmMgKCkgPT4ge1xuICBpZiAoc2VhcmNoSW5wdXQudmFsdWUgPT09IFwiXCIpIHJldHVybjtcbiAgY29uc3Qgd2VhdGhlckRhdGEgPSBhd2FpdCB3ZWF0aGVyLmdldERhdGEoc2VhcmNoSW5wdXQudmFsdWUpO1xuICB2aWV3LnNldFNlYXJjaFJlc3VsdCh3ZWF0aGVyRGF0YSk7XG59KTsiXSwic291cmNlUm9vdCI6IiJ9